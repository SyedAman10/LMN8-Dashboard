module.exports=[18622,(e,t,r)=>{t.exports=e.x("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js"))},56704,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-async-storage.external.js",()=>require("next/dist/server/app-render/work-async-storage.external.js"))},32319,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-unit-async-storage.external.js",()=>require("next/dist/server/app-render/work-unit-async-storage.external.js"))},20635,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/action-async-storage.external.js",()=>require("next/dist/server/app-render/action-async-storage.external.js"))},24725,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/after-task-async-storage.external.js",()=>require("next/dist/server/app-render/after-task-async-storage.external.js"))},14747,(e,t,r)=>{t.exports=e.x("path",()=>require("path"))},70406,(e,t,r)=>{t.exports=e.x("next/dist/compiled/@opentelemetry/api",()=>require("next/dist/compiled/@opentelemetry/api"))},93695,(e,t,r)=>{t.exports=e.x("next/dist/shared/lib/no-fallback-error.external.js",()=>require("next/dist/shared/lib/no-fallback-error.external.js"))},61724,(e,t,r)=>{t.exports=e.x("next/dist/compiled/next-server/app-route-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-route-turbo.runtime.prod.js"))},22734,(e,t,r)=>{t.exports=e.x("fs",()=>require("fs"))},46786,(e,t,r)=>{t.exports=e.x("os",()=>require("os"))},54799,(e,t,r)=>{t.exports=e.x("crypto",()=>require("crypto"))},80490,e=>{e.v(JSON.parse('{"name":"dotenv","version":"17.2.2","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","pretest":"npm run lint && npm run dts-check","test":"tap run --allow-empty-coverage --disable-coverage --timeout=60000","test:coverage":"tap run --show-full-coverage --timeout=60000 --coverage-report=text --coverage-report=lcov","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"homepage":"https://github.com/motdotla/dotenv#readme","funding":"https://dotenvx.com","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@types/node":"^18.11.3","decache":"^4.6.2","sinon":"^14.0.1","standard":"^17.0.0","standard-version":"^9.5.0","tap":"^19.2.0","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}'))},97289,(e,t,r)=>{let s=e.r(22734),n=e.r(14747),a=e.r(46786),o=e.r(54799),i=e.r(80490).version,l=["🔐 encrypt with Dotenvx: https://dotenvx.com","🔐 prevent committing .env to code: https://dotenvx.com/precommit","🔐 prevent building .env in docker: https://dotenvx.com/prebuild","📡 observe env with Radar: https://dotenvx.com/radar","📡 auto-backup env with Radar: https://dotenvx.com/radar","📡 version env with Radar: https://dotenvx.com/radar","🛠️  run anywhere with `dotenvx run -- yourcommand`","⚙️  specify custom .env file path with { path: '/custom/path/.env' }","⚙️  enable debug logging with { debug: true }","⚙️  override existing env vars with { override: true }","⚙️  suppress all logs with { quiet: true }","⚙️  write to custom object with { processEnv: myObject }","⚙️  load multiple .env files with { path: ['.env.local', '.env'] }"];function u(e){return"string"==typeof e?!["false","0","no","off",""].includes(e.toLowerCase()):!!e}let p=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function d(e){console.log(`[dotenv@${i}][DEBUG] ${e}`)}function c(e){console.log(`[dotenv@${i}] ${e}`)}function v(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function h(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(let r of e.path)s.existsSync(r)&&(t=r.endsWith(".vault")?r:`${r}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=n.resolve(process.cwd(),".env.vault");return s.existsSync(t)?t:null}function E(e){return"~"===e[0]?n.join(a.homedir(),e.slice(1)):e}let f={configDotenv:function(e){let t,r=n.resolve(process.cwd(),".env"),a="utf8",o=process.env;e&&null!=e.processEnv&&(o=e.processEnv);let i=u(o.DOTENV_CONFIG_DEBUG||e&&e.debug),p=u(o.DOTENV_CONFIG_QUIET||e&&e.quiet);e&&e.encoding?a=e.encoding:i&&d("No encoding is specified. UTF-8 is used by default");let v=[r];if(e&&e.path)if(Array.isArray(e.path))for(let t of(v=[],e.path))v.push(E(t));else v=[E(e.path)];let h={};for(let r of v)try{let t=f.parse(s.readFileSync(r,{encoding:a}));f.populate(h,t,e)}catch(e){i&&d(`Failed to load ${r} ${e.message}`),t=e}let m=f.populate(o,h,e);if(i=u(o.DOTENV_CONFIG_DEBUG||i),p=u(o.DOTENV_CONFIG_QUIET||p),i||!p){var g;let e=Object.keys(m).length,r=[];for(let e of v)try{let t=n.relative(process.cwd(),e);r.push(t)}catch(r){i&&d(`Failed to load ${e} ${r.message}`),t=r}c(`injecting env (${e}) from ${r.join(",")} ${(g=`-- tip: ${l[Math.floor(Math.random()*l.length)]}`,process.stdout.isTTY?`\x1b[2m${g}\x1b[0m`:g)}`)}return t?{parsed:h,error:t}:{parsed:h}},_configVault:function(e){let t=u(process.env.DOTENV_CONFIG_DEBUG||e&&e.debug),r=u(process.env.DOTENV_CONFIG_QUIET||e&&e.quiet);(t||!r)&&c("Loading env from encrypted .env.vault");let s=f._parseVault(e),n=process.env;return e&&null!=e.processEnv&&(n=e.processEnv),f.populate(n,s,e),{parsed:s}},_parseVault:function(e){let t,r=h(e=e||{});e.path=r;let s=f.configDotenv(e);if(!s.parsed){let e=Error(`MISSING_DATA: Cannot parse ${r} for an unknown reason`);throw e.code="MISSING_DATA",e}let n=v(e).split(","),a=n.length;for(let e=0;e<a;e++)try{let r=n[e].trim(),a=function(e,t){let r;try{r=new URL(t)}catch(e){if("ERR_INVALID_URL"===e.code){let e=Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw e.code="INVALID_DOTENV_KEY",e}throw e}let s=r.password;if(!s){let e=Error("INVALID_DOTENV_KEY: Missing key part");throw e.code="INVALID_DOTENV_KEY",e}let n=r.searchParams.get("environment");if(!n){let e=Error("INVALID_DOTENV_KEY: Missing environment part");throw e.code="INVALID_DOTENV_KEY",e}let a=`DOTENV_VAULT_${n.toUpperCase()}`,o=e.parsed[a];if(!o){let e=Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${a} in your .env.vault file.`);throw e.code="NOT_FOUND_DOTENV_ENVIRONMENT",e}return{ciphertext:o,key:s}}(s,r);t=f.decrypt(a.ciphertext,a.key);break}catch(t){if(e+1>=a)throw t}return f.parse(t)},config:function(e){if(0===v(e).length)return f.configDotenv(e);let t=h(e);if(!t){var r;return r=`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`,console.error(`[dotenv@${i}][WARN] ${r}`),f.configDotenv(e)}return f._configVault(e)},decrypt:function(e,t){let r=Buffer.from(t.slice(-64),"hex"),s=Buffer.from(e,"base64"),n=s.subarray(0,12),a=s.subarray(-16);s=s.subarray(12,-16);try{let e=o.createDecipheriv("aes-256-gcm",r,n);return e.setAuthTag(a),`${e.update(s)}${e.final()}`}catch(s){let e=s instanceof RangeError,t="Invalid key length"===s.message,r="Unsupported state or unable to authenticate data"===s.message;if(e||t){let e=Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw e.code="INVALID_DOTENV_KEY",e}if(r){let e=Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw e.code="DECRYPTION_FAILED",e}throw s}},parse:function(e){let t,r={},s=e.toString();for(s=s.replace(/\r\n?/mg,"\n");null!=(t=p.exec(s));){let e=t[1],s=t[2]||"",n=(s=s.trim())[0];s=s.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),'"'===n&&(s=(s=s.replace(/\\n/g,"\n")).replace(/\\r/g,"\r")),r[e]=s}return r},populate:function(e,t,r={}){let s=!!(r&&r.debug),n=!!(r&&r.override),a={};if("object"!=typeof t){let e=Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw e.code="OBJECT_REQUIRED",e}for(let r of Object.keys(t))Object.prototype.hasOwnProperty.call(e,r)?(!0===n&&(e[r]=t[r],a[r]=t[r]),s&&(!0===n?d(`"${r}" is already defined and WAS overwritten`):d(`"${r}" is already defined and was NOT overwritten`))):(e[r]=t[r],a[r]=t[r]);return a}};t.exports.configDotenv=f.configDotenv,t.exports._configVault=f._configVault,t.exports._parseVault=f._parseVault,t.exports.config=f.config,t.exports.decrypt=f.decrypt,t.exports.parse=f.parse,t.exports.populate=f.populate,t.exports=f},80533,e=>{"use strict";e.s(["createUser",()=>l,"createUserSession",()=>a,"getUserByEmail",()=>i,"getUserBySession",()=>o,"validateUser",()=>u]);var t=e.i(49632),r=e.i(79058);async function s(e){return await t.default.hash(e,12)}async function n(e,r){return await t.default.compare(e,r)}async function a(e){let t=Math.random().toString(36).substring(2)+Date.now().toString(36),s=new Date;return s.setDate(s.getDate()+7),await (0,r.query)("INSERT INTO user_sessions (user_id, session_token, expires_at) VALUES ($1, $2, $3)",[e,t,s]),t}async function o(e){return(await (0,r.query)(`SELECT u.*, s.expires_at 
     FROM users u 
     JOIN user_sessions s ON u.id = s.user_id 
     WHERE s.session_token = $1 AND s.expires_at > NOW() AND u.is_active = true`,[e])).rows[0]||null}async function i(e){return(await (0,r.query)("SELECT * FROM users WHERE email = $1 AND is_active = true",[e])).rows[0]||null}async function l(e){let{firstName:t,lastName:n,email:a,password:o,role:i,licenseNumber:l}=e,u=await s(o);return(await (0,r.query)(`INSERT INTO users (first_name, last_name, email, password_hash, role, license_number) 
     VALUES ($1, $2, $3, $4, $5, $6) 
     RETURNING id, first_name, last_name, email, role, created_at`,[t,n,a,u,i,l||null])).rows[0]}async function u(e,t){let r=await i(e);if(!r||!await n(t,r.password_hash))return null;let{password_hash:s,...a}=r;return a}},78707,(e,t,r)=>{},90337,e=>{"use strict";e.s(["handler",()=>D,"patchFetch",()=>T,"routeModule",()=>w,"serverHooks",()=>O,"workAsyncStorage",()=>N,"workUnitAsyncStorage",()=>R],90337);var t=e.i(47909),r=e.i(74017),s=e.i(96250),n=e.i(59756),a=e.i(61916),o=e.i(69741),i=e.i(16795),l=e.i(87718),u=e.i(95169),p=e.i(47587),d=e.i(66012),c=e.i(70101),v=e.i(26937),h=e.i(10372),E=e.i(93695);e.i(52474);var f=e.i(220);e.s(["GET",()=>x],35819);var m=e.i(89171),g=e.i(79058),_=e.i(80533);async function x(e){try{let t=e.cookies.get("session_token")?.value;if(!t)return m.NextResponse.json({error:"Not authenticated"},{status:401});let r=await (0,_.getUserBySession)(t);if(!r)return m.NextResponse.json({error:"Invalid or expired session"},{status:401});let s=await (0,g.query)(`SELECT COUNT(*) as count 
       FROM patients 
       WHERE user_id = $1 AND status = 'active'`,[r.id]),n=parseInt(s.rows[0].count),a=await (0,g.query)(`SELECT COUNT(*) as count 
       FROM patients 
       WHERE user_id = $1`,[r.id]),o=parseInt(a.rows[0].count),i=await (0,g.query)(`SELECT 
         COUNT(CASE WHEN sessions_completed >= total_sessions AND total_sessions > 0 THEN 1 END) as completed,
         COUNT(*) as total
       FROM patients 
       WHERE user_id = $1`,[r.id]),l=parseInt(i.rows[0].completed),u=parseInt(i.rows[0].total),p=u>0?Math.round(l/u*100):0,d=await (0,g.query)(`SELECT id, name, diagnosis, sessions_completed, total_sessions, status, created_at
       FROM patients 
       WHERE user_id = $1 
       ORDER BY created_at DESC 
       LIMIT 5`,[r.id]),c=(await (0,g.query)(`SELECT status, COUNT(*) as count
       FROM patients 
       WHERE user_id = $1 
       GROUP BY status`,[r.id])).rows.reduce((e,t)=>(e[t.status]=parseInt(t.count),e),{}),v=await (0,g.query)(`SELECT AVG(sessions_completed) as avg_completed, AVG(total_sessions) as avg_total
       FROM patients 
       WHERE user_id = $1`,[r.id]),h=Math.round(v.rows[0].avg_completed||0),E=Math.round(v.rows[0].avg_total||0);return m.NextResponse.json({success:!0,stats:{activePatients:n,totalPatients:o,sessionsToday:0,completionRate:p,recentPatients:d.rows.map(e=>({id:e.id,name:e.name,diagnosis:e.diagnosis,sessionsCompleted:e.sessions_completed,totalSessions:e.total_sessions,status:e.status,createdAt:e.created_at,progress:e.total_sessions>0?Math.round(e.sessions_completed/e.total_sessions*100):0})),patientsByStatus:c,avgSessionsCompleted:h,avgTotalSessions:E}})}catch(e){return console.error("Get dashboard stats error:",e),m.NextResponse.json({error:"Internal server error"},{status:500})}}var y=e.i(35819);let w=new t.AppRouteRouteModule({definition:{kind:r.RouteKind.APP_ROUTE,page:"/api/dashboard/stats/route",pathname:"/api/dashboard/stats",filename:"route",bundlePath:""},distDir:".next",relativeProjectDir:"",resolvedPagePath:"[project]/src/app/api/dashboard/stats/route.js",nextConfigOutput:"",userland:y}),{workAsyncStorage:N,workUnitAsyncStorage:R,serverHooks:O}=w;function T(){return(0,s.patchFetch)({workAsyncStorage:N,workUnitAsyncStorage:R})}async function D(e,t,s){var m;let g="/api/dashboard/stats/route";g=g.replace(/\/index$/,"")||"/";let _=await w.prepare(e,t,{srcPage:g,multiZoneDraftMode:!1});if(!_)return t.statusCode=400,t.end("Bad Request"),null==s.waitUntil||s.waitUntil.call(s,Promise.resolve()),null;let{buildId:x,params:y,nextConfig:N,isDraftMode:R,prerenderManifest:O,routerServerContext:T,isOnDemandRevalidate:D,revalidateOnlyGenerated:b,resolvedPathname:I}=_,C=(0,o.normalizeAppPath)(g),A=!!(O.dynamicRoutes[C]||O.routes[I]);if(A&&!R){let e=!!O.routes[I],t=O.dynamicRoutes[C];if(t&&!1===t.fallback&&!e)throw new E.NoFallbackError}let $=null;!A||w.isDev||R||($="/index"===($=I)?"/":$);let V=!0===w.isDev||!A,j=A&&!V,S=e.method||"GET",U=(0,a.getTracer)(),k=U.getActiveScopeSpan(),q={params:y,prerenderManifest:O,renderOpts:{experimental:{cacheComponents:!!N.experimental.cacheComponents,authInterrupts:!!N.experimental.authInterrupts},supportsDynamicResponse:V,incrementalCache:(0,n.getRequestMeta)(e,"incrementalCache"),cacheLifeProfiles:null==(m=N.experimental)?void 0:m.cacheLife,isRevalidate:j,waitUntil:s.waitUntil,onClose:e=>{t.on("close",e)},onAfterTaskError:void 0,onInstrumentationRequestError:(t,r,s)=>w.onRequestError(e,t,s,T)},sharedContext:{buildId:x}},M=new i.NodeNextRequest(e),L=new i.NodeNextResponse(t),F=l.NextRequestAdapter.fromNodeNextRequest(M,(0,l.signalFromNodeResponse)(t));try{let o=async r=>w.handle(F,q).finally(()=>{if(!r)return;r.setAttributes({"http.status_code":t.statusCode,"next.rsc":!1});let s=U.getRootSpanAttributes();if(!s)return;if(s.get("next.span_type")!==u.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${s.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let n=s.get("next.route");if(n){let e=`${S} ${n}`;r.setAttributes({"next.route":n,"http.route":n,"next.span_name":e}),r.updateName(e)}else r.updateName(`${S} ${e.url}`)}),i=async a=>{var i,l;let u=async({previousCacheEntry:r})=>{try{if(!(0,n.getRequestMeta)(e,"minimalMode")&&D&&b&&!r)return t.statusCode=404,t.setHeader("x-nextjs-cache","REVALIDATED"),t.end("This page could not be found"),null;let i=await o(a);e.fetchMetrics=q.renderOpts.fetchMetrics;let l=q.renderOpts.pendingWaitUntil;l&&s.waitUntil&&(s.waitUntil(l),l=void 0);let u=q.renderOpts.collectedTags;if(!A)return await (0,d.sendResponse)(M,L,i,q.renderOpts.pendingWaitUntil),null;{let e=await i.blob(),t=(0,c.toNodeOutgoingHttpHeaders)(i.headers);u&&(t[h.NEXT_CACHE_TAGS_HEADER]=u),!t["content-type"]&&e.type&&(t["content-type"]=e.type);let r=void 0!==q.renderOpts.collectedRevalidate&&!(q.renderOpts.collectedRevalidate>=h.INFINITE_CACHE)&&q.renderOpts.collectedRevalidate,s=void 0===q.renderOpts.collectedExpire||q.renderOpts.collectedExpire>=h.INFINITE_CACHE?void 0:q.renderOpts.collectedExpire;return{value:{kind:f.CachedRouteKind.APP_ROUTE,status:i.status,body:Buffer.from(await e.arrayBuffer()),headers:t},cacheControl:{revalidate:r,expire:s}}}}catch(t){throw(null==r?void 0:r.isStale)&&await w.onRequestError(e,t,{routerKind:"App Router",routePath:g,routeType:"route",revalidateReason:(0,p.getRevalidateReason)({isRevalidate:j,isOnDemandRevalidate:D})},T),t}},E=await w.handleResponse({req:e,nextConfig:N,cacheKey:$,routeKind:r.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:O,isRoutePPREnabled:!1,isOnDemandRevalidate:D,revalidateOnlyGenerated:b,responseGenerator:u,waitUntil:s.waitUntil});if(!A)return null;if((null==E||null==(i=E.value)?void 0:i.kind)!==f.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==E||null==(l=E.value)?void 0:l.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,n.getRequestMeta)(e,"minimalMode")||t.setHeader("x-nextjs-cache",D?"REVALIDATED":E.isMiss?"MISS":E.isStale?"STALE":"HIT"),R&&t.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let m=(0,c.fromNodeOutgoingHttpHeaders)(E.value.headers);return(0,n.getRequestMeta)(e,"minimalMode")&&A||m.delete(h.NEXT_CACHE_TAGS_HEADER),!E.cacheControl||t.getHeader("Cache-Control")||m.get("Cache-Control")||m.set("Cache-Control",(0,v.getCacheControlHeader)(E.cacheControl)),await (0,d.sendResponse)(M,L,new Response(E.value.body,{headers:m,status:E.value.status||200})),null};k?await i(k):await U.withPropagatedContext(e.headers,()=>U.trace(u.BaseServerSpan.handleRequest,{spanName:`${S} ${e.url}`,kind:a.SpanKind.SERVER,attributes:{"http.method":S,"http.target":e.url}},i))}catch(t){if(k||t instanceof E.NoFallbackError||await w.onRequestError(e,t,{routerKind:"App Router",routePath:C,routeType:"route",revalidateReason:(0,p.getRevalidateReason)({isRevalidate:j,isOnDemandRevalidate:D})}),A)throw t;return await (0,d.sendResponse)(M,L,new Response(null,{status:500})),null}}}];

//# sourceMappingURL=%5Broot-of-the-server%5D__d5d20468._.js.map